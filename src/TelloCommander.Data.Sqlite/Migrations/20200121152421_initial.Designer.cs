// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelloCommander.Data.Sqlite;

namespace TelloCommander.Data.Sqlite.Migrations
{
    [DbContext(typeof(TelloCommanderDbContext))]
    [Migration("20200121152421_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("TelloCommander.Data.Entities.Drone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetryDataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Time")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("SessionId");

                    b.ToTable("DataPoints");
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetryError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TelemetrySessionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TelemetrySessionId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetryProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetrySession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DroneId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetryDataPoint", b =>
                {
                    b.HasOne("TelloCommander.Data.Entities.TelemetryProperty", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelloCommander.Data.Entities.TelemetrySession", "Session")
                        .WithMany("DataPoints")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetryError", b =>
                {
                    b.HasOne("TelloCommander.Data.Entities.TelemetrySession", null)
                        .WithMany("Errors")
                        .HasForeignKey("TelemetrySessionId");
                });

            modelBuilder.Entity("TelloCommander.Data.Entities.TelemetrySession", b =>
                {
                    b.HasOne("TelloCommander.Data.Entities.Drone", "Drone")
                        .WithMany("Sessions")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
